node('docker') {
  checkout scm

  branch_to_metadata = [
    // "master"  : ["prod", "p-immersive-api", "p-cloudformation.yaml"],
    "staging"  : ["staging", "s-modelzoo-service", "p-cloudformation.yaml"]
  ]

  needs_deployment = branch_to_metadata.containsKey(env.BRANCH_NAME)
  zappa_stage = needs_deployment ? branch_to_metadata[env.BRANCH_NAME][0] : 'not defined'
  cf_stack_name = needs_deployment ? branch_to_metadata[env.BRANCH_NAME][1] : 'not defined'
  cf_template_filename = needs_deployment ? branch_to_metadata[env.BRANCH_NAME][2] : 'not defined'

  /* using workidir for tox is mandatory to avoid the reaching the maximum shebang length
     for ./bin/* files generated by pip install that is an issue for linux kernels with
     the default limit of 127 chars */
  tox_workdir = '/tmp/tox'

  env.AWS_DEFAULT_REGION = 'ap-southeast-2'

  docker.image('python:3.6').inside() {
    cache(maxCacheSize: 500, caches: [
            [$class: 'ArbitraryFileCache', excludes:'', includes: '**/*', path: '/tmp/tox']
        ])
    {
       stage('Install python deps') {
         sh "make install-dependencies"
       }
 
       stage('Cloudwatch stack create or update') {
          if (needs_deployment) {
            sh """
               AWS_CF_STACK_NAME=${cf_stack_name} AWS_CF_TEMPLATE_FILENAME=${cf_template_filename} make aws-cf-create-or-update
            """
          }
       }

       stage('Run tests') {
         sh """
              TOX_WORKDIR=${tox_workdir} make test
         """
       }
 
       stage('Deploy the app') {
         if (needs_deployment) {
           sh "TOX_WORKDIR=${tox_workdir} ZAPPA_STAGE=${zappa_stage} make zappa-create-or-update"
         }
       }
    }
  }
}
